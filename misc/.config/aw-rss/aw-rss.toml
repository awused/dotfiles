# You can use the -awconf flag to override the config being loaded.

# Database file. Use :memory: for a temporary, in memory database.
database = "/usr/home/desuwa/.rss/aw-rss.db"

# Host to listen on.
# Do not change this unless you understand the security implications.
# Aw-rss is an unsecured web server; it performs no authentication or
# authorization. If you want to expose aw-rss for remote access it should be
# done using a reverse proxy with basic authentication support such as nginx.
# Change this your own risk.
host = "localhost"

# Port to listen on.
port = 9092

# Log file, leave blank to log to stdout
# aw-rss truncates this file on every start.
log_file= "/usr/local/var/log/desurss/aw-rss.log"

# Log level, as per RUST_LOG, defaults to Info
# Trace, Debug, Info, Warning, Error
log_level = "Info"

# Whether items with identical URLs should be deduplicated or not, even in
# different feeds.
# When true, items with the same URLs in different feeds will be automatically
# marked as "read" after the first one.
# Whichever feed happens to go first is not deterministic.
dedupe = true

# Whitelist of known cloudflare protected hosts that you trust enough to run
# Javascript from.
#
# When cloudflare protection is detected for these domains, aw-rss will attempt
# to use cfscrape, if installed (requires node and python3), to bypass the
# basic javascript browser checks. It cannot do anything about captchas.
#
# For cloudflare protected domains that aren't in the whitelist, aw-rss will
# back off aggressively but will never run their javascript.
# CloudflareDomains = [
#   "konachan.com",
#   "www.royalroad.com",
#   "www.novelupdates.com"
# ]

