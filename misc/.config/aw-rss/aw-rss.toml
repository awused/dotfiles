# You can use the -awconf flag to override the config being loaded.

# Database file. Use :memory: for a temporary, in memory database.
Database = "/usr/home/desuwa/.rss/aw-rss.db"

# Path to the /dist folder of the compiled frontend
# Files inside this directory will be served.
# Does not default to anything, but if you built aw-rss in place you'll want to
# set this to /your/gopath/src/github.com/awused/aw-rss/dist.
# Environment variables are not expanded.
DistDir = "/storage/src/go/src/github.com/awused/aw-rss/dist"

# Port to listen on.
# Aw-rss always listens on IPv4 localhost (127.0.0.1). This is not configurable
# since aw-rss does not perform any authentication, authorization, or security.
Port = 9092

# Log file, leave blank to log to stdout
# Aw-rss does not clear or rotate this log file.
LogFile= "/usr/local/var/log/desurss/aw-rss.log"

# Logrus log level, defaults to Info
# Trace, Debug, Info, Warning, Error, Fatal and Panic.
LogLevel = "Info"

# Whether items with identical URLs should be deduplicated or not, even in
# different feeds.
# When true, items with the same URLs in different feeds will be automatically
# marked as "read" after the first one.
# Whichever feed happens to go first is not deterministic.
Dedupe = true

# Whitelist of known cloudflare protected hosts that you trust enough to run
# Javascript from.
#
# When cloudflare protection is detected for these domains, aw-rss will attempt
# to use cfscrape, if installed (requires node and python3), to bypass the
# basic javascript browser checks. It cannot do anything about captchas.
#
# For cloudflare protected domains that aren't in the whitelist, aw-rss will
# back off aggressively but will never run their javascript.
CloudflareDomains = [
  "konachan.com",
  "mangadex.org",
  "www.royalroad.com"
]

